
 Fujitsu Fortran Version 1.2.1  Wed Aug 14 10:56:07 2019

 Compilation information
   Current directory : /OFS3/nwpr/gfs/ncust1/VORTEX/src_vor
   Source file       : gausl3.f

 Option information
   Command line options : -Kident_mpi -f2004 -Kfast,optmsg=2 -CcdRR8 -Fwide -V -Ec -Qa,d,i,p,t,x -c -Kfast -CcdRR8 -Fwide -c -o gausl3.o -L/package/fx10/dms/dms.v4/lib -lrdms -lgdbm -L/package/fx10/operlib/lib -lnwp -I/opt/FJSVfxlang/1.2.1/include/mpi/fujitsu -Knointentopt -I/opt/FJSVfxlang/1.2.1/lib64
   Effective options    : -fi -g0 -AE -Ec -Fixed -Fwide -O3 -Qa,d,i,p,t,x -X03
                          -CcdRR8 -x0
                          -KSPARC64IXfx -KFLTLD -Kadr44 -Knoauto
                          -Knoautoobjstack -Knocalleralloc -Kdalign -Keval
                          -Knofenv_access -Kfp_contract -Kfp_relaxed
                          -Kfsimple -Kilfunc=loop -Knointentopt -Klargepage
                          -Kloop_blocking -Kloop_fission -Kloop_nofission_if
                          -Kloop_fusion -Kloop_interchange
                          -Kloop_nopart_parallel -Kloop_nopart_simd
                          -Kloop_noversioning -Kns -Kmfunc=1 -Knoocl -Komitfp
                          -Koptmsg=2 -Knopreex -Kprefetch_conditional
                          -Kprefetch_noindirect -Kprefetch_sequential=auto
                          -Kprefetch_nostride -Kprefetch_cache_level=all
                          -Kprefetch_double_line_L2 -Kprefetch_noinfer
                          -Kprefetch_nostrong -Kprefetch_strong_L2
                          -Knoshortloop -Ksimd=1 -Knosimd_region_constant
                          -Knostriping -Kswp -Knotemparraystack -Kunroll
                          -Knouxsimd -KNOXFILL
                          -Knoopenmp -Kopenmp_noassume_norecurrence
                          -Kopenmp_noordered_reduction -Kopenmp_notls
                          -Knothreadsafe -Knoparallel
                          -Kparallel_nofp_precision -Knoarray_private
                          -Knodynamic_iteration -Knoreduction
                          -Knoregion_extension
                          -Nallextput -Nnoalloc_assign
                          -Ncancel_overtime_compilation -Nnocompdisp
                          -Nnocopyarg -Nfreealloc -Nf90move -Nnohook_func
                          -Nnohook_time -Nline -Nlst -Nlst=a -Nlst=d -Nlst=i
                          -Nlst=p -Nlst=t -Nlst=x -Nnomallocfree -Nnoobsfun
                          -Nquickdbg=noargchk -Nquickdbg=nosubchk
                          -Nquickdbg=noundef -NRnotrap -Nnorecursive
                          -Nrt_notune -Nnosave -Nsetvalue=noheap
                          -Nsetvalue=nostack -Nsetvalue=noscalar
                          -Nsetvalue=noarray -Nsetvalue=nostruct -Nuse_rodata

 External subroutine subprogram "gausl3"
  (inc)(line-no.)(nest)(optimize)
               1                           subroutine gausl3 (n,xa,xb,wt,ab)
               2                     c
               3                     c weights and abscissas for nth order gaussian quadrature on (xa,xb).
               4                     c input arguments
               5                     c
               6                     c n  -the order desired
               7                     c xa -the left endpoint of the interval of integration
               8                     c xb -the right endpoint of the interval of integration
               9                     c output arguments
              10                     c ab -the n calculated abscissas
              11                     c wt -the n calculated weights
              12                     c
              13                           implicit double precision (a-h,o-z)
              14                     c
              15                     cfj
              16                           include '../include/rank.h'
     1         1                           common/mpe_comm/nsize, myrank
              17                     cfj
              18                           real  ab(n) ,wt(n),xa,xb
              19                     c
              20                     c machine dependent constants---
              21                     c  tol - convergence criterion for double precision iteration
              22                     c  pi  - given to 15 significant digits
              23                     c  c1  -  1/8                     these are coefficients in mcmahon"s
              24                     c  c2  -  -31/(2*3*8**2)          expansions of the kth zero of the
              25                     c  c3  -  3779/(2*3*5*8**3)       bessel function j0(x) (cf. abramowitz,
              26                     c  c4  -  -6277237/(3*5*7*8**5)   handbook of mathematical functions).
              27                     c  u   -  (1-(2/pi)**2)/4
              28                     c
              29                           data tol/1.d-14/,pi/3.14159265358979/,u/.148678816357662/
              30                           data c1,c2,c3,c4/.125,-.080729166666667,.246028645833333,
              31                          1                -1.82443876720609 /
              32                     c
              33                     c maximum number of iterations before giving up on convergence
              34                     c
              35                           data maxit /5/
              36                     c
              37                     c arithmetic statement function for converting integer to double
              38                     c
              39                           dbli(i) = dble(float(i))
              40                     c
              41                           ddif = .5d0*(dble(xb)-dble(xa))
              42                           dsum = .5d0*(dble(xb)+dble(xa))
              43                           if (n .gt. 1) go to 101
              44                           ab(1) = 0.
              45                           wt(1) = 2.*ddif
              46                           go to 107
              47                       101 continue
              48                           nnp1 = n*(n+1)
              49                           cond = 1./sqrt((.5+float(n))**2+u)
              50                           lim = n/2
              51                     c
              52     1                     do 105 k=1,lim
              53     1               	 b = (float(k)-.25)*pi
              54     1               	 bisq = 1./(b*b)
              55     1               c
              56     1               c rootbf approximates the kth zero of the bessel function j0(x)
              57     1               c
              58     1               	 rootbf = b*(1.+bisq*(c1+bisq*(c2+bisq*(c3+bisq*c4))))
              59     1               c
              60     1               c      initial guess for kth root of legendre poly p-sub-n(x)
              61     1               c
              62     1               	 dzero = cos(rootbf*cond)
              63     2               	 do 103 i=1,maxit
              64     2               c
              65     2               	    dpm2 = 1.d0
              66     2               	    dpm1 = dzero
              67     2               c
              68     2               c       recursion relation for legendre polynomials
              69     2               c
              70     3        s      	    do 102 nn=2,n
              71     3        m      		dp = (dbli(2*nn-1)*dzero*dpm1-dbli(nn-1)*dpm2)/dbli(nn)
              72     3        s      		dpm2 = dpm1
              73     3        s      		dpm1 = dp
              74     3        v        102       continue
              75     2               	    dtmp = 1.d0/(1.d0-dzero*dzero)
              76     2               	    dppr = dbli(n)*(dpm2-dzero*dp)*dtmp
              77     2               	    dp2pri = (2.d0*dzero*dppr-dbli(nnp1)*dp)*dtmp
              78     2               	    drat = dp/dppr
              79     2               c
              80     2               c       cubically-convergent iterative improvement of root
              81     2               c
              82     2               	    dzeri = dzero-drat*(1.d0+drat*dp2pri/(2.d0*dppr))
              83     2               	    ddum= dabs(dzeri-dzero)
              84     2               	 if (ddum .le. tol) go to 104
              85     2               	    dzero = dzeri
              86     2                 103    continue
              87     1               cfj
              88     1               	 if(myrank .eq. 0) print 504
              89     1               cfj
              90     1                 504    format(1x,' in gausl3, convergence failed')
              91     1                 104    continue
              92     1               	 ddifx = ddif*dzero
              93     1               	 ab(k) = dsum-ddifx
              94     1               	 wt(k) = 2.d0*(1.d0-dzero*dzero)/(dbli(n)*dpm2)**2*ddif
              95     1               	 i = n-k+1
              96     1               	 ab(i) = dsum+ddifx
              97     1               	 wt(i) = wt(k)
              98     1                 105 continue
              99                     c
             100                           if (mod(n,2) .eq. 0) go to 107
             101                           ab(lim+1) = dsum
             102                           nm1 = n-1
             103                           dprod = n
                                   <<< Loop-information Start >>>
                                   <<<  [OPTIMIZATION]
                                   <<<    SOFTWARE PIPELINING
                                   <<< Loop-information  End >>>
             104     1        s            do 106 k=1,nm1,2
             105     1        m      	 dprod = dbli(nm1-k)*dprod/dbli(n-k)
             106     1        v        106 continue
             107                           wt(lim+1) = 2.d0/dprod**2*ddif
             108                       107 return
             109                           end

 Diagnostic messages: program name(gausl3)
   jwd8220o-i  "gausl3.f", line 1: Optimizations is performed in this program unit with possibility of side effects. See informational messages below to determine which such optimizations have been performed.
   jwd8206o-i  "gausl3.f", line 49: Division is changed to multiplication by reciprocal.
   jwd8220o-i  "gausl3.f", line 53: Optimizations is performed in this program unit with possibility of side effects. See informational messages below to determine which such optimizations have been performed.
   jwd8209o-i  "gausl3.f", line 62: Evaluation order of polynomial expression is changed according to commutative law of addition and multiplication.
   jwd8663o-i  "gausl3.f", line 70: This loop is not software pipelined because software pipelining is worthless for this loop.
   jwd6202s-i  "gausl3.f", line 71: SIMD conversion cannot be applied to DO loop: data dependency of variable 'dpm1' may cause different results from serial execution for loop.
   jwd6202s-i  "gausl3.f", line 71: SIMD conversion cannot be applied to DO loop: data dependency of variable 'dpm2' may cause different results from serial execution for loop.
   jwd8220o-i  "gausl3.f", line 71: Optimizations is performed in this program unit with possibility of side effects. See informational messages below to determine which such optimizations have been performed.
   jwd8209o-i  "gausl3.f", line 76: Evaluation order of polynomial expression is changed according to commutative law of addition and multiplication.
   jwd8209o-i  "gausl3.f", line 82: Evaluation order of polynomial expression is changed according to commutative law of addition and multiplication.
   jwd8209o-i  "gausl3.f", line 83: Evaluation order of polynomial expression is changed according to commutative law of addition and multiplication.
   jwd8209o-i  "gausl3.f", line 94: Evaluation order of polynomial expression is changed according to commutative law of addition and multiplication.
   jwd8204o-i  "gausl3.f", line 104: This loop is software pipelined.
   jwd8205o-i  "gausl3.f", line 104: The software-pipelined loop is chosen at run time when the iteration count is greater than or equal to 4.
   jwd6202s-i  "gausl3.f", line 105: SIMD conversion cannot be applied to DO loop: data dependency of variable 'dprod' may cause different results from serial execution for loop.
   jwd8220o-i  "gausl3.f", line 105: Optimizations is performed in this program unit with possibility of side effects. See informational messages below to determine which such optimizations have been performed.
   jwd8209o-i  "gausl3.f", line 107: Evaluation order of polynomial expression is changed according to commutative law of addition and multiplication.

 Procedure information
   Lines      : 110
   Statements : 60
   Stack(byte): 16
   Prefetch num: 0

 Scoping unit of external sub-program : gausl3
   Attribute and Cross reference of name
     ab
      |(Class and Type) : variable name, REAL(8)
      |(Attributes)     : DIMENSION, dummy-argument
      |(Declaration)    : 1  18
      |(Definition)     : 44  93  96  101
      |(Reference)      : 
     b
      |(Class and Type) : variable name, REAL(8)-implicited
      |(Attributes)     : 
      |(Declaration)    : 
      |(Definition)     : 53
      |(Reference)      : 54  54  58
     bisq
      |(Class and Type) : variable name, REAL(8)-implicited
      |(Attributes)     : 
      |(Declaration)    : 
      |(Definition)     : 54
      |(Reference)      : 58  58  58  58
     c1
      |(Class and Type) : variable name, REAL(8)-implicited
      |(Attributes)     : initialized
      |(Declaration)    : 30
      |(Definition)     : 
      |(Reference)      : 58
     c2
      |(Class and Type) : variable name, REAL(8)-implicited
      |(Attributes)     : initialized
      |(Declaration)    : 30
      |(Definition)     : 
      |(Reference)      : 58
     c3
      |(Class and Type) : variable name, REAL(8)-implicited
      |(Attributes)     : initialized
      |(Declaration)    : 30
      |(Definition)     : 
      |(Reference)      : 58
     c4
      |(Class and Type) : variable name, REAL(8)-implicited
      |(Attributes)     : initialized
      |(Declaration)    : 30
      |(Definition)     : 
      |(Reference)      : 58
     cond
      |(Class and Type) : variable name, REAL(8)-implicited
      |(Attributes)     : 
      |(Declaration)    : 
      |(Definition)     : 49
      |(Reference)      : 62
     cos
      |(Class and Type) : intrinsic function name, REAL(8)
      |(Attributes)     : PURE, ELEMENTAL
      |(Declaration)    : 
      |(Definition)     : 
      |(Reference)      : 62
     dabs
      |(Class and Type) : intrinsic function name, REAL(8)
      |(Attributes)     : PURE, ELEMENTAL
      |(Declaration)    : 
      |(Definition)     : 
      |(Reference)      : 83
     dble
      |(Class and Type) : intrinsic function name, REAL(8)
      |(Attributes)     : PURE, ELEMENTAL
      |(Declaration)    : 
      |(Definition)     : 
      |(Reference)      : 39  41  41  42  42
     dbli
      |(Class and Type) : statement function name, REAL(8)-implicited
      |(Attributes)     : PURE
      |(Declaration)    : 39
      |(Definition)     : 
      |(Reference)      : 71  71  71  76  77  94  105  105
     ddif
      |(Class and Type) : variable name, REAL(8)-implicited
      |(Attributes)     : 
      |(Declaration)    : 
      |(Definition)     : 41
      |(Reference)      : 45  92  94  107
     ddifx
      |(Class and Type) : variable name, REAL(8)-implicited
      |(Attributes)     : 
      |(Declaration)    : 
      |(Definition)     : 92
      |(Reference)      : 93  96
     ddum
      |(Class and Type) : variable name, REAL(8)-implicited
      |(Attributes)     : 
      |(Declaration)    : 
      |(Definition)     : 83
      |(Reference)      : 84
     dp
      |(Class and Type) : variable name, REAL(8)-implicited
      |(Attributes)     : 
      |(Declaration)    : 
      |(Definition)     : 71
      |(Reference)      : 73  76  77  78
     dp2pri
      |(Class and Type) : variable name, REAL(8)-implicited
      |(Attributes)     : 
      |(Declaration)    : 
      |(Definition)     : 77
      |(Reference)      : 82
     dpm1
      |(Class and Type) : variable name, REAL(8)-implicited
      |(Attributes)     : 
      |(Declaration)    : 
      |(Definition)     : 66  73
      |(Reference)      : 71  72
     dpm2
      |(Class and Type) : variable name, REAL(8)-implicited
      |(Attributes)     : 
      |(Declaration)    : 
      |(Definition)     : 65  72
      |(Reference)      : 71  76  94
     dppr
      |(Class and Type) : variable name, REAL(8)-implicited
      |(Attributes)     : 
      |(Declaration)    : 
      |(Definition)     : 76
      |(Reference)      : 77  78  82
     dprod
      |(Class and Type) : variable name, REAL(8)-implicited
      |(Attributes)     : 
      |(Declaration)    : 
      |(Definition)     : 103  105
      |(Reference)      : 105  107
     drat
      |(Class and Type) : variable name, REAL(8)-implicited
      |(Attributes)     : 
      |(Declaration)    : 
      |(Definition)     : 78
      |(Reference)      : 82  82
     dsum
      |(Class and Type) : variable name, REAL(8)-implicited
      |(Attributes)     : 
      |(Declaration)    : 
      |(Definition)     : 42
      |(Reference)      : 93  96  101
     dtmp
      |(Class and Type) : variable name, REAL(8)-implicited
      |(Attributes)     : 
      |(Declaration)    : 
      |(Definition)     : 75
      |(Reference)      : 76  77
     dzeri
      |(Class and Type) : variable name, REAL(8)-implicited
      |(Attributes)     : 
      |(Declaration)    : 
      |(Definition)     : 82
      |(Reference)      : 83  85
     dzero
      |(Class and Type) : variable name, REAL(8)-implicited
      |(Attributes)     : 
      |(Declaration)    : 
      |(Definition)     : 62  85
      |(Reference)      : 66  71  75  75  76  77  82  83  92  94  94
     float
      |(Class and Type) : intrinsic function name, REAL(8)
      |(Attributes)     : PURE, ELEMENTAL
      |(Declaration)    : 
      |(Definition)     : 
      |(Reference)      : 39  49  53
     gausl3
      |(Class and Type) : external subroutine name
      |(Attributes)     : 
      |(Declaration)    : 
      |(Definition)     : 1
      |(Reference)      : 
     i
      |(Class and Type) : variable name, INTEGER(4)-implicited
      |(Attributes)     : 
      |(Declaration)    : 
      |(Definition)     : 63  95
      |(Reference)      : 39  39  96  97
     k
      |(Class and Type) : variable name, INTEGER(4)-implicited
      |(Attributes)     : 
      |(Declaration)    : 
      |(Definition)     : 52  104
      |(Reference)      : 53  93  94  95  97  105  105
     lim
      |(Class and Type) : variable name, INTEGER(4)-implicited
      |(Attributes)     : 
      |(Declaration)    : 
      |(Definition)     : 50
      |(Reference)      : 52  101  107
     maxit
      |(Class and Type) : variable name, INTEGER(4)-implicited
      |(Attributes)     : initialized
      |(Declaration)    : 35
      |(Definition)     : 
      |(Reference)      : 63
     mod
      |(Class and Type) : intrinsic function name, INTEGER(4)
      |(Attributes)     : PURE, ELEMENTAL
      |(Declaration)    : 
      |(Definition)     : 
      |(Reference)      : 100
     mpe_comm
      |(Class and Type) : common name
      |(Attributes)     : 
      |(Declaration)    : 1-1
      |(Definition)     : 
      |(Reference)      : 
     myrank
      |(Class and Type) : variable name, INTEGER(4)-implicited
      |(Attributes)     : common-block-object
      |(Declaration)    : 1-1
      |(Definition)     : 
      |(Reference)      : 88
     n
      |(Class and Type) : variable name, INTEGER(4)-implicited
      |(Attributes)     : dummy-argument
      |(Declaration)    : 1
      |(Definition)     : 
      |(Reference)      : 18  18  43  48  48  49  50  70  76  94  95  100  102  103  105
     nm1
      |(Class and Type) : variable name, INTEGER(4)-implicited
      |(Attributes)     : 
      |(Declaration)    : 
      |(Definition)     : 102
      |(Reference)      : 104  105
     nn
      |(Class and Type) : variable name, INTEGER(4)-implicited
      |(Attributes)     : 
      |(Declaration)    : 
      |(Definition)     : 70
      |(Reference)      : 71  71  71
     nnp1
      |(Class and Type) : variable name, INTEGER(4)-implicited
      |(Attributes)     : 
      |(Declaration)    : 
      |(Definition)     : 48
      |(Reference)      : 77
     nsize
      |(Class and Type) : variable name, INTEGER(4)-implicited
      |(Attributes)     : common-block-object
      |(Declaration)    : 1-1
      |(Definition)     : 
      |(Reference)      : 
     pi
      |(Class and Type) : variable name, REAL(8)-implicited
      |(Attributes)     : initialized
      |(Declaration)    : 29
      |(Definition)     : 
      |(Reference)      : 53
     rootbf
      |(Class and Type) : variable name, REAL(8)-implicited
      |(Attributes)     : 
      |(Declaration)    : 
      |(Definition)     : 58
      |(Reference)      : 62
     sqrt
      |(Class and Type) : intrinsic function name, REAL(8)
      |(Attributes)     : PURE, ELEMENTAL
      |(Declaration)    : 
      |(Definition)     : 
      |(Reference)      : 49
     tol
      |(Class and Type) : variable name, REAL(8)-implicited
      |(Attributes)     : initialized
      |(Declaration)    : 29
      |(Definition)     : 
      |(Reference)      : 84
     u
      |(Class and Type) : variable name, REAL(8)-implicited
      |(Attributes)     : initialized
      |(Declaration)    : 29
      |(Definition)     : 
      |(Reference)      : 49
     wt
      |(Class and Type) : variable name, REAL(8)
      |(Attributes)     : DIMENSION, dummy-argument
      |(Declaration)    : 1  18
      |(Definition)     : 45  94  97  107
      |(Reference)      : 97
     xa
      |(Class and Type) : variable name, REAL(8)
      |(Attributes)     : dummy-argument
      |(Declaration)    : 1  18
      |(Definition)     : 
      |(Reference)      : 41  42
     xb
      |(Class and Type) : variable name, REAL(8)
      |(Attributes)     : dummy-argument
      |(Declaration)    : 1  18
      |(Definition)     : 
      |(Reference)      : 41  42
   Cross reference of label
     (Label) (label-kind)               (line-no.)
     ------- ------------- ------------ ----------
        101  execution     (Definition) 47  
                           (Reference)  43
        102  execution     (Definition) 74  
                           (Reference)  70
        103  execution     (Definition) 86  
                           (Reference)  63
        104  execution     (Definition) 91  
                           (Reference)  84
        105  execution     (Definition) 98  
                           (Reference)  52
        106  execution     (Definition) 106  
                           (Reference)  104
        107  execution     (Definition) 108  
                           (Reference)  46  100
        504  format        (Definition) 90  
                           (Reference)  88

 Total information
   Procedures       : 1
   Total lines      : 110
   Total statements : 60
   Total stack(byte): 16
   Total prefetch num: 0

 Include file name list
     1 : ../include/rank.h

