
 Fujitsu Fortran Version 1.2.1  Wed Aug 14 10:56:27 2019

 Compilation information
   Current directory : /OFS3/nwpr/gfs/ncust1/VORTEX/src_vor
   Source file       : joinsr.f

 Option information
   Command line options : -Kident_mpi -f2004 -Kfast,optmsg=2 -CcdRR8 -Fwide -V -Ec -Qa,d,i,p,t,x -c -Kfast -CcdRR8 -Fwide -c -o joinsr.o -L/package/fx10/dms/dms.v4/lib -lrdms -lgdbm -L/package/fx10/operlib/lib -lnwp -I/opt/FJSVfxlang/1.2.1/include/mpi/fujitsu -Knointentopt -I/opt/FJSVfxlang/1.2.1/lib64
   Effective options    : -fi -g0 -AE -Ec -Fixed -Fwide -O3 -Qa,d,i,p,t,x -X03
                          -CcdRR8 -x0
                          -KSPARC64IXfx -KFLTLD -Kadr44 -Knoauto
                          -Knoautoobjstack -Knocalleralloc -Kdalign -Keval
                          -Knofenv_access -Kfp_contract -Kfp_relaxed
                          -Kfsimple -Kilfunc=loop -Knointentopt -Klargepage
                          -Kloop_blocking -Kloop_fission -Kloop_nofission_if
                          -Kloop_fusion -Kloop_interchange
                          -Kloop_nopart_parallel -Kloop_nopart_simd
                          -Kloop_noversioning -Kns -Kmfunc=1 -Knoocl -Komitfp
                          -Koptmsg=2 -Knopreex -Kprefetch_conditional
                          -Kprefetch_noindirect -Kprefetch_sequential=auto
                          -Kprefetch_nostride -Kprefetch_cache_level=all
                          -Kprefetch_double_line_L2 -Kprefetch_noinfer
                          -Kprefetch_nostrong -Kprefetch_strong_L2
                          -Knoshortloop -Ksimd=1 -Knosimd_region_constant
                          -Knostriping -Kswp -Knotemparraystack -Kunroll
                          -Knouxsimd -KNOXFILL
                          -Knoopenmp -Kopenmp_noassume_norecurrence
                          -Kopenmp_noordered_reduction -Kopenmp_notls
                          -Knothreadsafe -Knoparallel
                          -Kparallel_nofp_precision -Knoarray_private
                          -Knodynamic_iteration -Knoreduction
                          -Knoregion_extension
                          -Nallextput -Nnoalloc_assign
                          -Ncancel_overtime_compilation -Nnocompdisp
                          -Nnocopyarg -Nfreealloc -Nf90move -Nnohook_func
                          -Nnohook_time -Nline -Nlst -Nlst=a -Nlst=d -Nlst=i
                          -Nlst=p -Nlst=t -Nlst=x -Nnomallocfree -Nnoobsfun
                          -Nquickdbg=noargchk -Nquickdbg=nosubchk
                          -Nquickdbg=noundef -NRnotrap -Nnorecursive
                          -Nrt_notune -Nnosave -Nsetvalue=noheap
                          -Nsetvalue=nostack -Nsetvalue=noscalar
                          -Nsetvalue=noarray -Nsetvalue=nostruct -Nuse_rodata

 External subroutine subprogram "joinsr"
  (inc)(line-no.)(nest)(optimize)
               1                           subroutine joinsr(wss,s1,s2,s3,s4,jtrun,jtmax,lev
               2                          &                 ,mlistnum,num,ncld)
               3                     c
               4                           dimension wss(*), s1(*), s2(*), s3(*), s4(*)
               5                     c
               6                           if(num .eq. 2) call join2sr(wss,s1,s2,jtrun,jtmax,lev
               7                          &                           ,mlistnum,ncld)
               8                           if(num .eq. 3) call join3sr(wss,s1,s2,s3,jtrun,jtmax,lev
               9                          &                           ,mlistnum,ncld)
              10                           if(num .eq. 4) call join4sr(wss,s1,s2,s3,s4,jtrun,jtmax,lev
              11                          &                           ,mlistnum,ncld)
              12                     c
              13                           return
              14                           end

 Procedure information
   Lines      : 14
   Statements : 7
   Stack(byte): 0
   Prefetch num: 0

 Scoping unit of external sub-program : joinsr
   Attribute and Cross reference of name
     join2sr
      |(Class and Type) : external subroutine name
      |(Attributes)     : 
      |(Declaration)    : 
      |(Definition)     : 
      |(Reference)      : 6
     join3sr
      |(Class and Type) : external subroutine name
      |(Attributes)     : 
      |(Declaration)    : 
      |(Definition)     : 
      |(Reference)      : 8
     join4sr
      |(Class and Type) : external subroutine name
      |(Attributes)     : 
      |(Declaration)    : 
      |(Definition)     : 
      |(Reference)      : 10
     joinsr
      |(Class and Type) : external subroutine name
      |(Attributes)     : 
      |(Declaration)    : 
      |(Definition)     : 1
      |(Reference)      : 
     jtmax
      |(Class and Type) : variable name, INTEGER(4)-implicited
      |(Attributes)     : dummy-argument
      |(Declaration)    : 1
      |(Definition)     : 6  8  10
      |(Reference)      : 
     jtrun
      |(Class and Type) : variable name, INTEGER(4)-implicited
      |(Attributes)     : dummy-argument
      |(Declaration)    : 1
      |(Definition)     : 6  8  10
      |(Reference)      : 
     lev
      |(Class and Type) : variable name, INTEGER(4)-implicited
      |(Attributes)     : dummy-argument
      |(Declaration)    : 1
      |(Definition)     : 6  8  10
      |(Reference)      : 
     mlistnum
      |(Class and Type) : variable name, INTEGER(4)-implicited
      |(Attributes)     : dummy-argument
      |(Declaration)    : 1
      |(Definition)     : 6  8  10
      |(Reference)      : 
     ncld
      |(Class and Type) : variable name, INTEGER(4)-implicited
      |(Attributes)     : dummy-argument
      |(Declaration)    : 1
      |(Definition)     : 6  8  10
      |(Reference)      : 
     num
      |(Class and Type) : variable name, INTEGER(4)-implicited
      |(Attributes)     : dummy-argument
      |(Declaration)    : 1
      |(Definition)     : 
      |(Reference)      : 6  8  10
     s1
      |(Class and Type) : variable name, REAL(8)-implicited
      |(Attributes)     : DIMENSION, dummy-argument
      |(Declaration)    : 1  4
      |(Definition)     : 6  8  10
      |(Reference)      : 
     s2
      |(Class and Type) : variable name, REAL(8)-implicited
      |(Attributes)     : DIMENSION, dummy-argument
      |(Declaration)    : 1  4
      |(Definition)     : 6  8  10
      |(Reference)      : 
     s3
      |(Class and Type) : variable name, REAL(8)-implicited
      |(Attributes)     : DIMENSION, dummy-argument
      |(Declaration)    : 1  4
      |(Definition)     : 8  10
      |(Reference)      : 
     s4
      |(Class and Type) : variable name, REAL(8)-implicited
      |(Attributes)     : DIMENSION, dummy-argument
      |(Declaration)    : 1  4
      |(Definition)     : 10
      |(Reference)      : 
     wss
      |(Class and Type) : variable name, REAL(8)-implicited
      |(Attributes)     : DIMENSION, dummy-argument
      |(Declaration)    : 1  4
      |(Definition)     : 6  8  10
      |(Reference)      : 

 External subroutine subprogram "join2sr"
  (inc)(line-no.)(nest)(optimize)
              15                     c
              16                           subroutine join2sr(wss,s1,s2,jtrun,jtmax,lev,mlistnum,ncld)
              17                     c
              18                           dimension wss (lev,2,1+ncld,jtrun,jtmax)
              19                     c
              20                           dimension s1(lev,2,jtrun,jtmax)
              21                           dimension s2(lev*ncld,2,jtrun,jtmax)
              22                     c
                                   <<< Loop-information Start >>>
                                   <<<  [OPTIMIZATION]
                                   <<<    COLLAPSED
                                   <<<    SIMD
                                   <<< Loop-information  End >>>
              23              v            wss=0.
              24     1                     do 10 m=1,mlistnum
              25     2                     do 10 l=1,jtrun
                                   <<< Loop-information Start >>>
                                   <<<  [OPTIMIZATION]
                                   <<<    SIMD
                                   <<<    SOFTWARE PIPELINING
                                   <<< Loop-information  End >>>
              26     3       8v            do 10 k = 1, lev*2
              27     3       8v               wss(k,1,1,l,m) = s1(k,1,l,m)
              28     1       8v        10  continue
              29                     c
              30     1                     do 20 m=1,mlistnum
              31     2                     do 20 l=1,jtrun
              32     3                     do 20 n=1,ncld
              33     3                     nk=(n-1)*lev
                                   <<< Loop-information Start >>>
                                   <<<  [OPTIMIZATION]
                                   <<<    SIMD
                                   <<<    SOFTWARE PIPELINING
                                   <<< Loop-information  End >>>
              34     4       8v            do 20 k = 1, lev
              35     4       8v               kk=nk+k
              36     4       8v               wss(k,1,1+n,l,m) = s2(kk,1,l,m)
              37     4       8v               wss(k,2,1+n,l,m) = s2(kk,2,l,m)
              38     1       8v        20  continue
              39                     
              40                     c
              41                           return
              42                           end

 Diagnostic messages: program name(join2sr)
   jwd8220o-i  "joinsr.f", line 16: Optimizations is performed in this program unit with possibility of side effects. See informational messages below to determine which such optimizations have been performed.
   jwd6003s-i  "joinsr.f", line 23: SIMD conversion is applied to array description.
   jwd8663o-i  "joinsr.f", line 23: This loop is not software pipelined because software pipelining is worthless for this loop.
   jwd6001s-i  "joinsr.f", line 26: SIMD conversion is applied to DO loop with DO variable 'k'.
   jwd8204o-i  "joinsr.f", line 26: This loop is software pipelined.
   jwd8205o-i  "joinsr.f", line 26: The software-pipelined loop is chosen at run time when the iteration count is greater than or equal to 65.
   jwd8209o-i  "joinsr.f", line 27: Evaluation order of polynomial expression is changed according to commutative law of addition and multiplication.
   jwd6001s-i  "joinsr.f", line 34: SIMD conversion is applied to DO loop with DO variable 'k'.
   jwd8204o-i  "joinsr.f", line 34: This loop is software pipelined.
   jwd8205o-i  "joinsr.f", line 34: The software-pipelined loop is chosen at run time when the iteration count is greater than or equal to 65.
   jwd8209o-i  "joinsr.f", line 36: Evaluation order of polynomial expression is changed according to commutative law of addition and multiplication.
   jwd8209o-i  "joinsr.f", line 37: Evaluation order of polynomial expression is changed according to commutative law of addition and multiplication.

 Procedure information
   Lines      : 28
   Statements : 21
   Stack(byte): 0
   Prefetch num: 0

 Scoping unit of external sub-program : join2sr
   Attribute and Cross reference of name
     join2sr
      |(Class and Type) : external subroutine name
      |(Attributes)     : 
      |(Declaration)    : 
      |(Definition)     : 16
      |(Reference)      : 
     jtmax
      |(Class and Type) : variable name, INTEGER(4)-implicited
      |(Attributes)     : dummy-argument
      |(Declaration)    : 16
      |(Definition)     : 
      |(Reference)      : 18  20  21
     jtrun
      |(Class and Type) : variable name, INTEGER(4)-implicited
      |(Attributes)     : dummy-argument
      |(Declaration)    : 16
      |(Definition)     : 
      |(Reference)      : 18  20  21  25  31
     k
      |(Class and Type) : variable name, INTEGER(4)-implicited
      |(Attributes)     : 
      |(Declaration)    : 
      |(Definition)     : 26  34
      |(Reference)      : 27  27  35  36  37
     kk
      |(Class and Type) : variable name, INTEGER(4)-implicited
      |(Attributes)     : 
      |(Declaration)    : 
      |(Definition)     : 35
      |(Reference)      : 36  37
     l
      |(Class and Type) : variable name, INTEGER(4)-implicited
      |(Attributes)     : 
      |(Declaration)    : 
      |(Definition)     : 25  31
      |(Reference)      : 27  27  36  36  37  37
     lev
      |(Class and Type) : variable name, INTEGER(4)-implicited
      |(Attributes)     : dummy-argument
      |(Declaration)    : 16
      |(Definition)     : 
      |(Reference)      : 18  20  21  26  33  34
     m
      |(Class and Type) : variable name, INTEGER(4)-implicited
      |(Attributes)     : 
      |(Declaration)    : 
      |(Definition)     : 24  30
      |(Reference)      : 27  27  36  36  37  37
     mlistnum
      |(Class and Type) : variable name, INTEGER(4)-implicited
      |(Attributes)     : dummy-argument
      |(Declaration)    : 16
      |(Definition)     : 
      |(Reference)      : 24  30
     n
      |(Class and Type) : variable name, INTEGER(4)-implicited
      |(Attributes)     : 
      |(Declaration)    : 
      |(Definition)     : 32
      |(Reference)      : 33  36  37
     ncld
      |(Class and Type) : variable name, INTEGER(4)-implicited
      |(Attributes)     : dummy-argument
      |(Declaration)    : 16
      |(Definition)     : 
      |(Reference)      : 18  21  32
     nk
      |(Class and Type) : variable name, INTEGER(4)-implicited
      |(Attributes)     : 
      |(Declaration)    : 
      |(Definition)     : 33
      |(Reference)      : 35
     s1
      |(Class and Type) : variable name, REAL(8)-implicited
      |(Attributes)     : DIMENSION, dummy-argument
      |(Declaration)    : 16  20
      |(Definition)     : 
      |(Reference)      : 27
     s2
      |(Class and Type) : variable name, REAL(8)-implicited
      |(Attributes)     : DIMENSION, dummy-argument
      |(Declaration)    : 16  21
      |(Definition)     : 
      |(Reference)      : 36  37
     wss
      |(Class and Type) : variable name, REAL(8)-implicited
      |(Attributes)     : DIMENSION, dummy-argument
      |(Declaration)    : 16  18
      |(Definition)     : 23  27  36  37
      |(Reference)      : 
   Cross reference of label
     (Label) (label-kind)               (line-no.)
     ------- ------------- ------------ ----------
         10  execution     (Definition) 28  
                           (Reference)  24  25  26
         20  execution     (Definition) 38  
                           (Reference)  30  31  32  34

 External subroutine subprogram "join3sr"
  (inc)(line-no.)(nest)(optimize)
              43                     c
              44                           subroutine join3sr(wss,s1,s2,s3,jtrun,jtmax,lev,mlistnum,ncld)
              45                     c
              46                           dimension wss (lev,2,2+ncld,jtrun,jtmax)
              47                     c
              48                           dimension s1(lev,2,jtrun,jtmax)
              49                           dimension s2(lev,2,jtrun,jtmax)
              50                           dimension s3(lev*ncld,2,jtrun,jtmax)
              51                     c
                                   <<< Loop-information Start >>>
                                   <<<  [OPTIMIZATION]
                                   <<<    COLLAPSED
                                   <<<    SIMD
                                   <<< Loop-information  End >>>
              52              v            wss=0.
              53     1                     do 10 m=1,mlistnum
              54     2                     do 10 l=1,jtrun
                                   <<< Loop-information Start >>>
                                   <<<  [OPTIMIZATION]
                                   <<<    SIMD
                                   <<<    SOFTWARE PIPELINING
                                   <<< Loop-information  End >>>
              55     3       8v            do 10 k = 1, lev*2
              56     3       8v               wss(k,1,1,l,m) = s1(k,1,l,m)
              57     3       8v               wss(k,1,2,l,m) = s2(k,1,l,m)
              58     1       8v        10  continue
              59                     c
              60     1                     do 20 m=1,mlistnum
              61     2                     do 20 l=1,jtrun
              62     3                     do 20 n=1,ncld
              63     3                     nk=(n-1)*lev
                                   <<< Loop-information Start >>>
                                   <<<  [OPTIMIZATION]
                                   <<<    SIMD
                                   <<<    SOFTWARE PIPELINING
                                   <<< Loop-information  End >>>
              64     4       8v            do 20 k = 1, lev
              65     4       8v               kk=nk+k
              66     4       8v               wss(k,1,2+n,l,m) = s3(kk,1,l,m)
              67     4       8v               wss(k,2,2+n,l,m) = s3(kk,2,l,m)
              68     1       8v        20  continue
              69                     c
              70                           return
              71                           end

 Diagnostic messages: program name(join3sr)
   jwd8220o-i  "joinsr.f", line 44: Optimizations is performed in this program unit with possibility of side effects. See informational messages below to determine which such optimizations have been performed.
   jwd6003s-i  "joinsr.f", line 52: SIMD conversion is applied to array description.
   jwd8663o-i  "joinsr.f", line 52: This loop is not software pipelined because software pipelining is worthless for this loop.
   jwd6001s-i  "joinsr.f", line 55: SIMD conversion is applied to DO loop with DO variable 'k'.
   jwd8204o-i  "joinsr.f", line 55: This loop is software pipelined.
   jwd8205o-i  "joinsr.f", line 55: The software-pipelined loop is chosen at run time when the iteration count is greater than or equal to 65.
   jwd8209o-i  "joinsr.f", line 56: Evaluation order of polynomial expression is changed according to commutative law of addition and multiplication.
   jwd8209o-i  "joinsr.f", line 57: Evaluation order of polynomial expression is changed according to commutative law of addition and multiplication.
   jwd6001s-i  "joinsr.f", line 64: SIMD conversion is applied to DO loop with DO variable 'k'.
   jwd8204o-i  "joinsr.f", line 64: This loop is software pipelined.
   jwd8205o-i  "joinsr.f", line 64: The software-pipelined loop is chosen at run time when the iteration count is greater than or equal to 65.
   jwd8209o-i  "joinsr.f", line 66: Evaluation order of polynomial expression is changed according to commutative law of addition and multiplication.
   jwd8209o-i  "joinsr.f", line 67: Evaluation order of polynomial expression is changed according to commutative law of addition and multiplication.

 Procedure information
   Lines      : 29
   Statements : 23
   Stack(byte): 0
   Prefetch num: 0

 Scoping unit of external sub-program : join3sr
   Attribute and Cross reference of name
     join3sr
      |(Class and Type) : external subroutine name
      |(Attributes)     : 
      |(Declaration)    : 
      |(Definition)     : 44
      |(Reference)      : 
     jtmax
      |(Class and Type) : variable name, INTEGER(4)-implicited
      |(Attributes)     : dummy-argument
      |(Declaration)    : 44
      |(Definition)     : 
      |(Reference)      : 46  48  49  50
     jtrun
      |(Class and Type) : variable name, INTEGER(4)-implicited
      |(Attributes)     : dummy-argument
      |(Declaration)    : 44
      |(Definition)     : 
      |(Reference)      : 46  48  49  50  54  61
     k
      |(Class and Type) : variable name, INTEGER(4)-implicited
      |(Attributes)     : 
      |(Declaration)    : 
      |(Definition)     : 55  64
      |(Reference)      : 56  56  57  57  65  66  67
     kk
      |(Class and Type) : variable name, INTEGER(4)-implicited
      |(Attributes)     : 
      |(Declaration)    : 
      |(Definition)     : 65
      |(Reference)      : 66  67
     l
      |(Class and Type) : variable name, INTEGER(4)-implicited
      |(Attributes)     : 
      |(Declaration)    : 
      |(Definition)     : 54  61
      |(Reference)      : 56  56  57  57  66  66  67  67
     lev
      |(Class and Type) : variable name, INTEGER(4)-implicited
      |(Attributes)     : dummy-argument
      |(Declaration)    : 44
      |(Definition)     : 
      |(Reference)      : 46  48  49  50  55  63  64
     m
      |(Class and Type) : variable name, INTEGER(4)-implicited
      |(Attributes)     : 
      |(Declaration)    : 
      |(Definition)     : 53  60
      |(Reference)      : 56  56  57  57  66  66  67  67
     mlistnum
      |(Class and Type) : variable name, INTEGER(4)-implicited
      |(Attributes)     : dummy-argument
      |(Declaration)    : 44
      |(Definition)     : 
      |(Reference)      : 53  60
     n
      |(Class and Type) : variable name, INTEGER(4)-implicited
      |(Attributes)     : 
      |(Declaration)    : 
      |(Definition)     : 62
      |(Reference)      : 63  66  67
     ncld
      |(Class and Type) : variable name, INTEGER(4)-implicited
      |(Attributes)     : dummy-argument
      |(Declaration)    : 44
      |(Definition)     : 
      |(Reference)      : 46  50  62
     nk
      |(Class and Type) : variable name, INTEGER(4)-implicited
      |(Attributes)     : 
      |(Declaration)    : 
      |(Definition)     : 63
      |(Reference)      : 65
     s1
      |(Class and Type) : variable name, REAL(8)-implicited
      |(Attributes)     : DIMENSION, dummy-argument
      |(Declaration)    : 44  48
      |(Definition)     : 
      |(Reference)      : 56
     s2
      |(Class and Type) : variable name, REAL(8)-implicited
      |(Attributes)     : DIMENSION, dummy-argument
      |(Declaration)    : 44  49
      |(Definition)     : 
      |(Reference)      : 57
     s3
      |(Class and Type) : variable name, REAL(8)-implicited
      |(Attributes)     : DIMENSION, dummy-argument
      |(Declaration)    : 44  50
      |(Definition)     : 
      |(Reference)      : 66  67
     wss
      |(Class and Type) : variable name, REAL(8)-implicited
      |(Attributes)     : DIMENSION, dummy-argument
      |(Declaration)    : 44  46
      |(Definition)     : 52  56  57  66  67
      |(Reference)      : 
   Cross reference of label
     (Label) (label-kind)               (line-no.)
     ------- ------------- ------------ ----------
         10  execution     (Definition) 58  
                           (Reference)  53  54  55
         20  execution     (Definition) 68  
                           (Reference)  60  61  62  64

 External subroutine subprogram "join4sr"
  (inc)(line-no.)(nest)(optimize)
              72                     c
              73                           subroutine join4sr(wss,s1,s2,s3,s4,jtrun,jtmax,lev,mlistnum,ncld)
              74                     c
              75                           dimension wss (lev,2,3+ncld,jtrun,jtmax)
              76                     c
              77                           dimension s1(lev,2,jtrun,jtmax)
              78                           dimension s2(lev,2,jtrun,jtmax)
              79                           dimension s3(lev,2,jtrun,jtmax)
              80                           dimension s4(lev*ncld,2,jtrun,jtmax)
              81                     c
                                   <<< Loop-information Start >>>
                                   <<<  [OPTIMIZATION]
                                   <<<    COLLAPSED
                                   <<<    SIMD
                                   <<< Loop-information  End >>>
              82              v            wss=0.
              83     1                     do 10 m=1,mlistnum
              84     2                     do 10 l=1,jtrun
                                   <<< Loop-information Start >>>
                                   <<<  [OPTIMIZATION]
                                   <<<    SIMD
                                   <<<    SOFTWARE PIPELINING
                                   <<< Loop-information  End >>>
              85     3       6v            do 10 k = 1, lev*2
              86     3       6v               wss(k,1,1,l,m) = s1(k,1,l,m)
              87     3       6v               wss(k,1,2,l,m) = s2(k,1,l,m)
              88     3       6v               wss(k,1,3,l,m) = s3(k,1,l,m)
              89     1       6v        10  continue
              90                     c
              91     1                     do 20 m=1,mlistnum
              92     2                     do 20 l=1,jtrun
              93     3                     do 20 n=1,ncld
              94     3                     nk=(n-1)*lev
                                   <<< Loop-information Start >>>
                                   <<<  [OPTIMIZATION]
                                   <<<    SIMD
                                   <<<    SOFTWARE PIPELINING
                                   <<< Loop-information  End >>>
              95     4       8v            do 20 k = 1, lev
              96     4       8v               kk=nk+k
              97     4       8v               wss(k,1,3+n,l,m) = s4(kk,1,l,m)
              98     4       8v               wss(k,2,3+n,l,m) = s4(kk,2,l,m)
              99     1       8v        20  continue
             100                     c
             101                           return
             102                           end

 Diagnostic messages: program name(join4sr)
   jwd8220o-i  "joinsr.f", line 73: Optimizations is performed in this program unit with possibility of side effects. See informational messages below to determine which such optimizations have been performed.
   jwd6003s-i  "joinsr.f", line 82: SIMD conversion is applied to array description.
   jwd8663o-i  "joinsr.f", line 82: This loop is not software pipelined because software pipelining is worthless for this loop.
   jwd6001s-i  "joinsr.f", line 85: SIMD conversion is applied to DO loop with DO variable 'k'.
   jwd8204o-i  "joinsr.f", line 85: This loop is software pipelined.
   jwd8205o-i  "joinsr.f", line 85: The software-pipelined loop is chosen at run time when the iteration count is greater than or equal to 49.
   jwd8209o-i  "joinsr.f", line 86: Evaluation order of polynomial expression is changed according to commutative law of addition and multiplication.
   jwd8209o-i  "joinsr.f", line 87: Evaluation order of polynomial expression is changed according to commutative law of addition and multiplication.
   jwd8209o-i  "joinsr.f", line 88: Evaluation order of polynomial expression is changed according to commutative law of addition and multiplication.
   jwd6001s-i  "joinsr.f", line 95: SIMD conversion is applied to DO loop with DO variable 'k'.
   jwd8204o-i  "joinsr.f", line 95: This loop is software pipelined.
   jwd8205o-i  "joinsr.f", line 95: The software-pipelined loop is chosen at run time when the iteration count is greater than or equal to 65.
   jwd8209o-i  "joinsr.f", line 97: Evaluation order of polynomial expression is changed according to commutative law of addition and multiplication.
   jwd8209o-i  "joinsr.f", line 98: Evaluation order of polynomial expression is changed according to commutative law of addition and multiplication.

 Procedure information
   Lines      : 31
   Statements : 25
   Stack(byte): 0
   Prefetch num: 0

 Scoping unit of external sub-program : join4sr
   Attribute and Cross reference of name
     join4sr
      |(Class and Type) : external subroutine name
      |(Attributes)     : 
      |(Declaration)    : 
      |(Definition)     : 73
      |(Reference)      : 
     jtmax
      |(Class and Type) : variable name, INTEGER(4)-implicited
      |(Attributes)     : dummy-argument
      |(Declaration)    : 73
      |(Definition)     : 
      |(Reference)      : 75  77  78  79  80
     jtrun
      |(Class and Type) : variable name, INTEGER(4)-implicited
      |(Attributes)     : dummy-argument
      |(Declaration)    : 73
      |(Definition)     : 
      |(Reference)      : 75  77  78  79  80  84  92
     k
      |(Class and Type) : variable name, INTEGER(4)-implicited
      |(Attributes)     : 
      |(Declaration)    : 
      |(Definition)     : 85  95
      |(Reference)      : 86  86  87  87  88  88  96  97  98
     kk
      |(Class and Type) : variable name, INTEGER(4)-implicited
      |(Attributes)     : 
      |(Declaration)    : 
      |(Definition)     : 96
      |(Reference)      : 97  98
     l
      |(Class and Type) : variable name, INTEGER(4)-implicited
      |(Attributes)     : 
      |(Declaration)    : 
      |(Definition)     : 84  92
      |(Reference)      : 86  86  87  87  88  88  97  97  98  98
     lev
      |(Class and Type) : variable name, INTEGER(4)-implicited
      |(Attributes)     : dummy-argument
      |(Declaration)    : 73
      |(Definition)     : 
      |(Reference)      : 75  77  78  79  80  85  94  95
     m
      |(Class and Type) : variable name, INTEGER(4)-implicited
      |(Attributes)     : 
      |(Declaration)    : 
      |(Definition)     : 83  91
      |(Reference)      : 86  86  87  87  88  88  97  97  98  98
     mlistnum
      |(Class and Type) : variable name, INTEGER(4)-implicited
      |(Attributes)     : dummy-argument
      |(Declaration)    : 73
      |(Definition)     : 
      |(Reference)      : 83  91
     n
      |(Class and Type) : variable name, INTEGER(4)-implicited
      |(Attributes)     : 
      |(Declaration)    : 
      |(Definition)     : 93
      |(Reference)      : 94  97  98
     ncld
      |(Class and Type) : variable name, INTEGER(4)-implicited
      |(Attributes)     : dummy-argument
      |(Declaration)    : 73
      |(Definition)     : 
      |(Reference)      : 75  80  93
     nk
      |(Class and Type) : variable name, INTEGER(4)-implicited
      |(Attributes)     : 
      |(Declaration)    : 
      |(Definition)     : 94
      |(Reference)      : 96
     s1
      |(Class and Type) : variable name, REAL(8)-implicited
      |(Attributes)     : DIMENSION, dummy-argument
      |(Declaration)    : 73  77
      |(Definition)     : 
      |(Reference)      : 86
     s2
      |(Class and Type) : variable name, REAL(8)-implicited
      |(Attributes)     : DIMENSION, dummy-argument
      |(Declaration)    : 73  78
      |(Definition)     : 
      |(Reference)      : 87
     s3
      |(Class and Type) : variable name, REAL(8)-implicited
      |(Attributes)     : DIMENSION, dummy-argument
      |(Declaration)    : 73  79
      |(Definition)     : 
      |(Reference)      : 88
     s4
      |(Class and Type) : variable name, REAL(8)-implicited
      |(Attributes)     : DIMENSION, dummy-argument
      |(Declaration)    : 73  80
      |(Definition)     : 
      |(Reference)      : 97  98
     wss
      |(Class and Type) : variable name, REAL(8)-implicited
      |(Attributes)     : DIMENSION, dummy-argument
      |(Declaration)    : 73  75
      |(Definition)     : 82  86  87  88  97  98
      |(Reference)      : 
   Cross reference of label
     (Label) (label-kind)               (line-no.)
     ------- ------------- ------------ ----------
         10  execution     (Definition) 89  
                           (Reference)  83  84  85
         20  execution     (Definition) 99  
                           (Reference)  91  92  93  95

 Total information
   Procedures       : 4
   Total lines      : 102
   Total statements : 76
   Total stack(byte): 0
   Total prefetch num: 0

